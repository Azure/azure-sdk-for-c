message("Using warning flags for GCC 7.4.0, project: ${PROJECT_NAME}")

# Flags not enabled by -Wall on GCC 7.4.0, discovered by running
# gcc -Wall -Wextra -pedantic-errors -Werror -Q --help=warning

add_compile_options(
  # Flags without settings
  -pedantic-errors
  -Waggregate-return
  -Walloc-zero
  -Walloca
  -Wbad-function-cast
  -Wc++-compat
  -Wcast-align
  -Wcast-qual
  -Wcomments
  -Wconversion
  -Wdate-time
  -Wdisabled-optimization
  -Wdouble-promotion
  -Wduplicated-branches
  -Wduplicated-cond
  -Werror-implicit-function-declaration
  -Wfloat-conversion
  -Wfloat-equal
  -Wimplicit-fallthrough
  -Winit-self
  -Winline
  -Winvalid-pch
  -Wjump-misses-init
  -Wlogical-op
  -Wmissing-declarations
  -Wmissing-format-attribute
  -Wmissing-include-dirs
  -Wmissing-noreturn
  -Wmissing-prototypes
  -Wmultichar
  -Wnested-externs
  -Wnull-dereference
  -Wold-style-definition
  -Wpacked
  -Wpadded
  -Wredundant-decls
  -Wrestrict
  -Wscalar-storage-order
  -Wsign-conversion
  -Wstack-protector
  -Wstrict-prototypes
  -Wsuggest-final-methods
  -Wsuggest-final-types
  -Wswitch-default
  -Wswitch-enum
  -Wsystem-headers
  # A true traditional C preprocessor does not recognize #elif, #error, or #pragma. GCC supports #elif and #error even in traditional mode, but not #pragma.
  # https://gcc.gnu.org/onlinedocs/gcc-3.1.1/cpp/Traditional-Mode.html
  # -Wtraditional   
  -Wtraditional-conversion
  -Wtrampolines
  -Wundef
  -Wunreachable-code
  -Wunsafe-loop-optimizations
  -Wunsuffixed-float-constants
  -Wunused-macros
  -Wvector-operation-performance
  -Wwrite-strings

  # Flags with settings
  -Walloc-size-larger-than=0
  -Wformat-nonliteral
  -Wformat-overflow=2
  -Wformat-security
  -Wformat-signedness
  -Wformat-truncation
  -Wformat-y2k
  -Wformat=2
  -Wimplicit-fallthrough=3
  -Wnormalized=nfc
  -Wshadow=global
  -Wshift-overflow=2
  -Wstrict-overflow=2
  -Wstringop-overflow=3
  -Wsuggest-attribute=const
  -Wsuggest-attribute=format
  -Wsuggest-attribute=noreturn
  -Wsuggest-attribute=pure
  -Wunused-const-variable=2

  # -Wlarger-than=<number> -- Might be worth setting this later
  # -Wstack-usage=<number> -- Might be worth setting this later
)