parameters:
  Artifacts: []
  ArtifactName: 'not-specified'

stages:
  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:
    - ${{ each artifact in parameters.Artifacts }}:
      - stage: Release_${{artifact.safeName}}
        displayName: 'Release ${{artifact.name}}'
        dependsOn: Build
        condition:  and(succeeded(), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-c-pr'))

        jobs:
          - deployment: TagRepository
            displayName: "Create release tag"
            condition: ne(variables['Skip.TagRepository'], 'true')
            environment: github

            pool:
              vmImage: windows-2019

            strategy:
              runOnce:
                deploy:
                  steps:
                    - checkout: none
                    - template: ../../tools/clone-buildtools/clone-buildtools.yml
                    - pwsh: Get-ChildItem -Recurse $(Pipeline.Workspace)/packages/${{artifact.Name}}
                      displayName: Output Visible Artifacts
                    - pwsh: >-
                        Get-Content $(Pipeline.Workspace)/azure-sdk-build-tools/scripts/create-tags-and-git-release.ps1 | Write-Host
                      displayName: create-tags-and-git-release.ps1 contents
                    - pwsh: >-
                          $(Pipeline.Workspace)/azure-sdk-build-tools/scripts/create-tags-and-git-release.ps1
                          -artifactLocation "$(Pipeline.Workspace)/packages/${{artifact.Name}}"
                          -packageRepository C
                          -releaseSha $(Build.SourceVersion)
                          -repoId $(Build.Repository.Name)
                      displayName: 'Verify Package Tags and Create Git Releases'
                      timeoutInMinutes: 5
                      env:
                        GH_TOKEN: $(azuresdk-github-pat)

          - ${{if ne(artifact.options.skipPublishDocs, 'true')}}:
            - deployment: PublishDocs
              displayName: Publish Docs to GitHub pages
              condition: ne(variables['Skip.PublishDocs'], 'true')
              environment: githubio

              pool:
                vmImage: windows-2019

              strategy:
                runOnce:
                  deploy:
                    steps:
                      - checkout: none
                      - pwsh: Write-Host 'publish docs'
                      - template: ../../tools/clone-buildtools/clone-buildtools.yml
                      - pwsh: |
                          Get-ChildItem -Recurse $(Pipeline.Workspace)/docs/${{ artifact.Name }}
                        displayName: Output Visible Artifacts
                      - template: ../../tools/generic-blob-upload/publish-blobs.yml
                        parameters:
                          FolderForUpload: '$(Pipeline.Workspace)/docs/${{ artifact.Name }}'
                          BlobSASKey: '$(azure-sdk-docs-prod-sas)'
                          BlobName: '$(azure-sdk-docs-prod-blob-name)'
                          TargetLanguage: 'c'
                          # we override the regular script path because we have cloned the build tools repo as a separate artifact.
                          ScriptPath: '$(Pipeline.Workspace)/azure-sdk-build-tools/scripts/copy-docs-to-blobstorage.ps1'


          - ${{if ne(artifact.options.skipUpdateSdkVersion, 'true')}}:
            - deployment: UpdateSdkVersion
              displayName: "Update SDK Version"
              condition: and(succeeded(), ne(variables['Skip.UpdateSdkVersion'], 'true'))
              environment: github

              pool:
                vmImage: windows-2019

              strategy:
                runOnce:
                  deploy:
                    steps:
                      - checkout: self
                      - pwsh: |
                          eng/Update-SdkVersion.ps1
                        displayName: Increment SDK version
                      - template: ../steps/create-pull-request.yml
                        parameters:
                          RepoName: azure-sdk-for-c
                          PRBranchName: increment-sdk-version-${{ parameters.ServiceDirectory }}-$(Build.BuildId)
                          CommitMsg: "Increment sdk version after release of ${{ artifact.name }}"
                          PRTitle: "Increment version for ${{ parameters.ServiceDirectory }} releases"