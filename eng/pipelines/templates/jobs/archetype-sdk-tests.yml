parameters:
  LiveTestSamples: []

jobs:
  - job: LiveTest
    condition: and(succeededOrFailed(), ne(variables['Skip.Test'], 'true'))
    strategy:
      matrix:
        Win_x64_with_iot_samples:
          OSVmImage: 'windows-2019'
          vcpkg.deps: 'curl[winssl] cmocka paho-mqtt'
          VCPKG_DEFAULT_TRIPLET: 'x64-windows-static'
          CMAKE_GENERATOR: 'Visual Studio 16 2019'
          CMAKE_GENERATOR_PLATFORM: x64
          build.args: ' -DTRANSPORT_PAHO=ON'
          test_type: 'iot'
        Linux_x64_with_iot_samples:
          OSVmImage: 'ubuntu-18.04'
          vcpkg.deps: 'curl[ssl] cmocka paho-mqtt'
          VCPKG_DEFAULT_TRIPLET: 'x64-linux'
          build.args: ' -DTRANSPORT_PAHO=ON'
          test_type: 'iot'
    pool:
      vmImage: $(OSVmImage)

    steps:
      - template: /eng/pipelines/templates/steps/vcpkg.yml
        parameters:
          DependenciesVariableName: vcpkg.deps
          
      - template: /eng/common/TestResources/deploy-test-resources.yml
        parameters:
          ServiceDirectory: '.'

      - pwsh: |
          Uninstall-AzureRm
          # Generate certificate 
          echo "BaseName: " $BaseName
          cd $env:SOURCES_DIR\sdk\samples\iot\
          openssl ecparam -out device_ec_key.pem -name prime256v1 -genkey
          openssl req -new -days 365 -nodes -x509 -key device_ec_key.pem -out device_ec_cert.pem -config x509_config.cfg -subj "/CN=$DEVICE_ID"

          Get-Content device_ec_cert.pem, device_ec_key.pem | Set-Content device_cert_store.pem
          openssl x509 -noout -fingerprint -in device_ec_cert.pem | % {$_.replace(":", "")} | % {$_.replace("SHA1 Fingerprint=", "")} | Tee-Object fingerprint.txt
          $fingerprint = Get-Content -Path .\fingerprint.txt
          
          # Pass fingerprint to IoTHub 
          Add-AzIotHubDevice `
            -ResourceGroupName $ResourceGroupName `
            -IotHubName $IOTHUB_NAME `
            -DeviceId $DEVICE_ID `
            -AuthMethod "x509_thumbprint" `
            -PrimaryThumbprint $fingerprint `
            -SecondaryThumbprint $fingerprint
            
          # Download Baltimore Cert
          curl https://cacerts.digicert.com/BaltimoreCyberTrustRoot.crt.pem > $SOURCES_DIR\sdk\samples\iot\BaltimoreCyberTrustRoot.crt.pem
          
          # Link IoTHub to DPS service
          hubConnectionString=$(Get-AzIotHubConnectionString -ResourceGroupName $AZURE_RESOURCEGROUP_NAME -Name $IOTHUB_NAME )
          az iot dps linked-hub create --dps-name $DPS_NAME --resource-group $AZURE_RESOURCEGROUP_NAME --connection-string $hubConnectionString --location eastus
          
        condition: contains(variables['test_type'], 'iot')
        env:
          VCPKG_DEFAULT_TRIPLET: x64-windows-static
          VCPKG_ROOT: $(Agent.TempDirectory)
          SOURCES_DIR: $(Build.SourcesDirectory)
          DEVICE_ID: "aziotbld-c-sample"
          IOTHUB_NAME: "aziotbld-embed-cd"
          DPS_NAME: "aziotbld-c-dps"

      - template: /eng/pipelines/templates/steps/cmake-build.yml
        parameters:
          BuildArgs: $(build.args)

      # Run live tests
      - ${{ each sample in parameters.LiveTestSamples }}:
        - script: ${{ sample.NonWindowsPath }}
          displayName: Live Test ${{ sample.Name }} (Non-Windows)
          condition: not(contains(variables['OSVmImage'], 'windows'))
          env: 
            AZ_IOT_DEVICE_X509_CERT_PEM_FILE_PATH: $(Build.SourcesDirectory)\sdk\samples\iot\cert.pem
            AZ_IOT_DEVICE_X509_TRUST_PEM_FILE_PATH: $(Build.SourcesDirectory)\sdk\samples\iot\BaltimoreCyberTrustRoot.crt.pem
            AZ_IOT_HUB_DEVICE_ID: "aziotbld-c-sample"
            AZ_IOT_HUB_HOSTNAME: "aziotbld-embed-cd"
          
        - script: ${{ sample.WindowsPath }}
          displayName: Live Test ${{ sample.Name }} (Windows)
          condition: contains(variables['OSVmImage'], 'windows')
          env:
            AZ_IOT_DEVICE_X509_CERT_PEM_FILE_PATH: $(Build.SourcesDirectory)\sdk\samples\iot\cert.pem
            AZ_IOT_DEVICE_X509_TRUST_PEM_FILE_PATH: $(Build.SourcesDirectory)\sdk\samples\iot\BaltimoreCyberTrustRoot.crt.pem
            AZ_IOT_HUB_DEVICE_ID: "aziotbld-c-sample"
            AZ_IOT_HUB_HOSTNAME: "aziotbld-embed-cd"

      - template: /eng/common/TestResources/remove-test-resources.yml
        parameters:
          ServiceDirectory: '.'
