parameters:
  LiveTestSamples: []

jobs:
  - job:
    displayName: LiveTest
    condition: and(succeededOrFailed(), ne(variables['Skip.Test'], 'true'))
    strategy:
      matrix:
        Linux_x64_with_iot_samples:
          Pool: $(LINUXPOOL)
          OSVmImage: $(LINUXVMIMAGE)
          VCPKG_DEFAULT_TRIPLET: 'x64-linux'
          build.args: ' -DTRANSPORT_PAHO=ON'
          test_type: 'iot'
          os: 'linux'
        Linux_ubuntu_2204_x64_with_iot_samples:
          Pool: $(LINUXNEXTPOOL)
          OSVmImage: $(LINUXNEXTVMIMAGE)
          VCPKG_DEFAULT_TRIPLET: 'x64-linux'
          build.args: ' -DTRANSPORT_PAHO=ON'
          test_type: 'iot'
          os: 'linux'
        # Disable live testing for these matrix entries until we have something to
        # test here.
        # Linux_x64_with_samples:
        #   Pool: $(LINUXPOOL)
        #   OSVmImage: $(LINUXVMIMAGE)
        #   VCPKG_DEFAULT_TRIPLET: 'x64-linux'
        #   build.args: ' -DTRANSPO.RT_CURL=ON -DAZ_PLATFORM_IMPL=POSIX'
    pool:
      name: $(Pool)
      vmImage: $(OSVmImage)
      os: linux

    steps:
      - template: /eng/pipelines/templates/steps/ci.livetest.yml
        parameters:
          OSName: linux
          LiveTestSamples: ${{ parameters.LiveTestSamples }}

  - job:
    displayName: LiveTest
    condition: and(succeededOrFailed(), ne(variables['Skip.Test'], 'true'))
    strategy:
      matrix:
        # Test on the win 2019
        Win2019_x64_with_iot_samples:
          Pool: $(WINDOWSPREVIOUSPOOL)
          OSVmImage: $(WINDOWSPREVIOUSVMIMAGE)
          VCPKG_DEFAULT_TRIPLET: 'x64-windows-static'
          CMAKE_GENERATOR: 'Visual Studio 16 2019'
          CMAKE_GENERATOR_PLATFORM: x64
          build.args: ' -DTRANSPORT_PAHO=ON'
          test_type: 'iot'
          os: 'win'
        # Test on the win 2022
        Win2022_x64_with_iot_samples:
          Pool: $(WINDOWSPOOL)
          OSVmImage: $(WINDOWSVMIMAGE)
          VCPKG_DEFAULT_TRIPLET: 'x64-windows-static'
          CMAKE_GENERATOR: 'Visual Studio 17 2022'
          CMAKE_GENERATOR_PLATFORM: x64
          build.args: ' -DTRANSPORT_PAHO=ON'
          test_type: 'iot'
          os: 'win'
        # Disable live testing for these matrix entries until we have something to
        # test here.
        # Win_x86_with_samples:
        #   Pool: $(WINDOWSPOOL)
        #   OSVmImage: $(WINDOWSVMIMAGE)
        #   VCPKG_DEFAULT_TRIPLET: 'x86-windows-static'
        #   CMAKE_GENERATOR: 'Visual Studio 17 2022'
        #   CMAKE_GENERATOR_PLATFORM: Win32
        #   build.args: ' -DTRANSPORT_CURL=ON -DAZ_PLATFORM_IMPL=WIN32'
        # Win_x64_with_samples:
        #   Pool: $(WINDOWSPOOL)
        #   OSVmImage: $(WINDOWSVMIMAGE)
        #   VCPKG_DEFAULT_TRIPLET: 'x64-windows-static'
        #   CMAKE_GENERATOR: 'Visual Studio 17 2022'
        #   CMAKE_GENERATOR_PLATFORM: x64
        #   build.args: ' -DTRANSPORT_CURL=ON -DAZ_PLATFORM_IMPL=WIN32'
    pool:
      name: $(Pool)
      vmImage: $(OSVmImage)
      os: ${{ parameters.OSName }}

    steps:
      - template: /eng/pipelines/templates/steps/ci.livetest.yml
        parameters:
          OSName: windows
          LiveTestSamples: ${{ parameters.LiveTestSamples }}

  - job:
    displayName: LiveTest
    condition: and(succeededOrFailed(), ne(variables['Skip.Test'], 'true'))
    strategy:
      matrix:
        MacOS_x64_with_iot_samples:
          Pool: Azure Pipelines
          OSVmImage: 'macos-latest'
          VCPKG_DEFAULT_TRIPLET: 'x64-osx'
          build.args: ' -DTRANSPORT_PAHO=ON'
          test_type: 'iot'
        # Disable live testing for these matrix entries until we have something to
        # test here.
        # MacOS_x64_with_samples:
        #   Pool: Azure Pipelines
        #   OSVmImage: 'macos-latest'
        #   VCPKG_DEFAULT_TRIPLET: 'x64-osx'
        #   build.args: ' -DTRANSPORT_CURL=ON  -DAZ_PLATFORM_IMPL=POSIX'
    pool:
      name: $(Pool)
      vmImage: $(OSVmImage)
      os: macOS

    steps:
      - template: /eng/pipelines/templates/steps/ci.livetest.yml
        parameters:
          OSName: macOS
          LiveTestSamples: ${{ parameters.LiveTestSamples }}
