# Assumes that the VM image is in a variable called OSVmImage

parameters:
  # Use the variable name itself (no $() or other wrapping syntax). This is
  # because we use runtime and macro expressions for conditions and script
  # invocations
  DependenciesVariableName: vcpkg.deps

steps:
  # Mac OS specific requirements
  - task: Bash@3
    inputs:
      targetType: inline
      script: |
        sudo xcode-select --switch /Applications/Xcode_11.3.1.app
        echo "xcode path:"
        sudo xcode-select --print-path

        # Install gcc 9
        brew install gcc@9
        gcc --version

        git clone https://github.com/Microsoft/vcpkg.git
        cd vcpkg
        git rev-parse --verify HEAD
        git status

        ./bootstrap-vcpkg.sh

        # Validate that vcpkg bootstrap succeeded
        ./vcpkg version
        if [ $? -ne 0 ]
        then
          echo "./bootstrap-vcpkg.sh FAILED"
          exit 1
        fi

        echo "##vso[task.prependpath]$(pwd)"
        echo "##vso[task.setvariable variable=VCPKG_INSTALLATION_ROOT;]$(pwd)"
    # Execute only for Mac and if there is at least one dependency to be installed
    condition: and(succeeded(), contains(variables['OSVmImage'], 'macOS'), not(eq(variables['${{ parameters.DependenciesVariableName }}'], '')))
    displayName: vcpkg bootstrap

  - script: |
      vcpkg install $(${{ parameters.DependenciesVariableName }})
    displayName: vcpkg install dependencies
    # Execute only if there is at least one dependency to be installed
    condition: and(succeeded(), not(eq(variables['${{ parameters.DependenciesVariableName }}'], '')))
